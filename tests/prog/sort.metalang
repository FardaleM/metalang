
def array<int> copytab(array<int> tab, int len)
  def array<int> o[len] with i do
    return tab[i]
  end
  return o
end

def void bubblesort(array<int> tab, int len)
	for i = 0 to len -1 do
	  for j = i + 1 to len - 1 do
			if tab[i] > tab[j] then
				def int tmp = tab[i]
				tab[i] = tab[j]
				tab[j] = tmp
			end
	  end
	end
end

def void qsort(array<int> tab, int len, int i, int j)
  if i < j then
    def i0 = i
    def j0 = j
    /* pivot : tab[0] */
    while i != j do
      if tab[i] > tab[j] then
        if i == j - 1 then /* on inverse simplement*/
          def int tmp = tab[i]
			    tab[i] = tab[j]
			    tab[j] = tmp
          i ++;
        else /* on place tab[i+1] à la place de tab[j], tab[j] à la place de tab[i] et tab[i] à la place de tab[i+1] */
          def int tmp = tab[i]
			    tab[i] = tab[j]
			    tab[j] = tab[i+1]
          tab[i+1] = tmp
          i ++;
      end
      else
        j --;
      end
    end
    qsort(tab, len, i0, i-1);
    qsort(tab, len, i+1, j0);
  end
end

main
	def int len = 2
	read int len skip
	def array<int> tab[len] with i_ do
		def int tmp = 0
		read int tmp skip
		return tmp
	end
  def tab2 = copytab(tab, len);
	bubblesort(tab2, len)
  for i = 0 to len - 1 do
	  print int tab2[i] print " "
  end
  print "\n"
  def tab3 = copytab(tab, len);
	qsort(tab3, len, 0, len - 1)
  for i = 0 to len - 1 do
	  print int tab3[i] print " "
  end
  print "\n"
end
