
def int eratostene(array<int> t, int max)
	def n = 0
	for i = 2 to max - 1 do
		if t[i] == i then
			n ++
			def j = i * i
			while j < max && j > 0 do
				t[j] = 0
				j += i
			end
    end
  end
	return n;
end

def int fillPrimesFactors(array<int> t, int n, array<int> primes, int nprimes)
	for i = 0 to nprimes - 1 do
		def d = primes[i]
		while n % d == 0 do
			t[d] ++
			n /= d
		end
		if n == 1 then
			return primes[i]
		end
	end
	return n
end

def int sumdivaux2(array<int> t, int n, int i)
	while i < n && t[i] == 0 do
		i++
	end
	return i
end

def int sumdivaux(array<int> t, int n, int i)
	if i > n then
		return 1
	elsif t[i] == 0 then
		return sumdivaux(t, n, sumdivaux2(t, n, i+1))
	else
		def o = sumdivaux(t, n, sumdivaux2(t, n, i+1))
		def out = 0
		def p = i
		for j = 1 to t[i] do
			out += p
			p = p * i
		end
		return (out + 1)* o
	end
end

def int sumdiv(int nprimes, array<int> primes, int n)
	def array<int> t[n+1] with i do
		return 0
  end
	def max = fillPrimesFactors(t, n, primes, nprimes)
	return sumdivaux(t, max, 0)
end

main
	def maximumprimes = 1001
	def array<int> era[maximumprimes] with j do
		return j
	end
	def nprimes = eratostene(era, maximumprimes)
	def array<int> primes[nprimes] with o do
		return 0
	end
	def l = 0
	for k = 2 to maximumprimes - 1 do
		if era[k] == k then
			primes[l] = k
			l++
		end
	end

	print int l print " == " print nprimes print "\n"

	def sum = 0
	for n = 2 to 1000 do
		def other = sumdiv(nprimes, primes, n) - n
		if other > n then
			def othersum = sumdiv(nprimes, primes, other) - other
			if othersum == n then
				print other print " & " print n print "\n"
				sum += other + n
			end
		end
	end
	print "\n"
	print sum print "\n"
end
