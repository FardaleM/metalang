
integer find0(integer len, integer array array tab, integer array array cache, integer x, integer y){
	if (y == len - 1){
	  return tab[y][x];
	}
	if (x > y){
	  return 100000;
	}
	if (cache[y][x] != 0){
	  return cache[y][x];
	}
	integer result := 0;
	integer out0 := find0(len, tab, cache, x, y+1);
	integer out1 := find0(len, tab, cache, x+1, y+1);
	if (out0 < out1){
	  result := out0 + tab[y][x];
	}else{
	  result := out1 + tab[y][x];
	}
	cache[y][y] := result;
	return result;
}

integer find(integer len, integer array array tab){
	integer array array tab2[len];
	for i := 0 to len - 1
	{
	  integer array tab3[i+1];
	  for j := 0 to i {
	      tab3[j] := 0;
	  }
	  tab2[i] := tab3;
	}
	return find0(len, tab, tab2, 0, 0);
}

prog{
	integer len := 0;
	read<integer>(len);
	stdin_sep();
	integer array array tab[len];
	for i := 1 to len
	{
		integer len2 := i;
		integer array tab2[len2];
		tab[i-1] := tab2;
		for j := 1 to len2
		{
			read<integer>(tab[i - 1][j-1]);
			stdin_sep();
		}
	}
	print<integer>(find(len, tab));
	print<integer array array>(tab);
}
