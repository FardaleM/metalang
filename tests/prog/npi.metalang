/*
Notation polonaise inversÃ©e
*/

macro integer int_of_char(char c){ 
ml -> "int_of_char ($c)";
* -> "$c";
}

bool is_number(char c){
     return c <= '9' && c >= '0';
}

integer npi(char array str, integer len){
	integer array stack[len];
	integer ptrStack := 0;
	integer ptrStr := 0;
	while (ptrStr < len){

	if (str[ptrStr] == ' '){
	   ptrStr := ptrStr + 1;
	} else if ( is_number( str[ptrStr] ) ) {
	   integer num := 0;
	   while( str[ptrStr] != ' ' ){
	     num := num * 10 + int_of_char(str[ptrStr]) - int_of_char('0');
	     ptrStr := ptrStr + 1;
	   }
	   stack[ptrStack] := num;
	   ptrStack := ptrStack + 1;
	}else if (str[ptrStr] == '+'){
	      stack[ptrStack - 2] := stack[ptrStack - 2] + stack[ptrStack - 1];
	      ptrStack := ptrStack - 1;
	      ptrStr := ptrStr + 1;
	}
     }
	return stack[0];
}

prog{
	integer len := 0;
	read<integer>(len);
	stdin_sep();
	char array tab[len] (i ->
		char tmp := '\0';
		read<char>(tmp);
		return tmp;
	);
	integer result := npi(tab, len);
	print<integer>(result);
}