
def int pathfind_aux(array<array<int>> cache, array<array<char>> tab, int x, int y, int posX, int posY)
	if posX == x - 1 && posY == y - 1 then
		return 0
	elsif posX < 0 || posY < 0 || posX >= x || posY >= y then
		return x * y * 10
	elsif tab[posY][posX] == '#' then
		return x * y * 10
	elsif cache[posY][posX] != -1 then
		return cache[posY][posX]
	else
		cache[posY][posX] = x * y * 10
		def int val1 = pathfind_aux(cache, tab, x, y, posX + 1, posY)
		def int val2 = pathfind_aux(cache, tab, x, y, posX - 1, posY)
		def int val3 = pathfind_aux(cache, tab, x, y, posX, posY - 1)
		def int val4 = pathfind_aux(cache, tab, x, y, posX, posY + 1)
		def int out = 1 + min4(val1, val2, val3, val4)
		cache[posY][posX] = out
		return out
	end
end
	
	
def int pathfind(array<array<char>> tab, int x, int y)
	def array<array<int>> cache[y] with i do
		def array<int> tmp[x] with j do
      print tab[i][j]
			return -1
		end
    print "\n"
		return tmp
	end
	return pathfind_aux(cache, tab, x, y, 0, 0)
end

main
	def int x = read_int()
	def int y = read_int()
  print x print " " print y print "\n"
	def array<array<char>> tab = read_char_matrix(x, y)
	def int result = pathfind(tab, x, y)
	print int result
end

