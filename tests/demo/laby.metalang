record @case_state
  left : bool
  right : bool
  top : bool
  bottom : bool
  free : bool
end

record @laby
  sizeX : int
  sizeY : int
  cases : array<array<@case_state>>
end


def bool can_open_right(@laby state, int x, int y)
  return x < state.sizeX - 1 && state.cases[x + 1][y].free
end

def bool can_open_left(@laby state, int x, int y)
  return x > 0 && state.cases[x - 1][y].free
end

def bool can_open_bottom(@laby state, int x, int y)
  return y < state.sizeY - 1 && state.cases[x][y + 1].free
end

def bool can_open_top(@laby state, int x, int y)
  return y > 0 && state.cases[x][y - 1].free
end

def void open_left(@laby state, int x, int y)
  state.cases[x - 1][y].right = false;
  state.cases[x][y].left = false;
  state.cases[x - 1][y].free = false;
  state.cases[x][y].free = false;
end

def void open_right(@laby state, int x, int y)
  state.cases[x][y].right = false;
  state.cases[x + 1][y].left = false;
  state.cases[x][y].free = false;
  state.cases[x + 1][y].free = false;
end

def void open_top(@laby state, int x, int y)
  state.cases[x][y - 1].bottom = false;
  state.cases[x][y].top = false;
  state.cases[x][y - 1].free = false;
  state.cases[x][y].free = false;
end

def void open_bottom(@laby state, int x, int y)
  state.cases[x][y + 1].top = false;
  state.cases[x][y].bottom = false;
  state.cases[x][y + 1].free = false;
  state.cases[x][y].free = false;
end

def @laby init(int x, int y)
  def cases[x] with i do
    def cases_x[y] with j do
      def reco = record
        left = true;
        right = true;
        top = true;
        bottom = true;
        free = true;
      end
      return reco
    end
    return cases_x
  end
  def out = record
    sizeX = x
    sizeY = y
    cases = cases
  end
  return out
end

def void print_lab(@laby l)
  for x = 0 to l.sizeX - 1 do
    print string "__"
  end
  print string "\n"
  for y = 0 to l.sizeY - 1 do
    for x = 0 to l.sizeX - 1 do
      if l.cases[x][y].left then
        if l.cases[x][y].bottom then
          print string "|_"
        else
          print string "| "
        end
      elsif l.cases[x][y].bottom then
        print string "__"
      else
        print string "  "
      end
    end
    print string "|\n"
  end
  print string "\n"
end

def void gen(@laby lab, int x, int y)
  def order[4] with i do
    return i
  end
  for i = 0 to 2 do
    def j = random( 4 - i)
    def k = order[i]
    order[i] = order[j]
    order[j] = k
  end
  for i = 0 to 3 do
    if 0 == order[i] && can_open_left(lab, x, y) then
      open_left(lab, x, y);
      gen(lab, x - 1, y);
    end
    if 1 == order[i] && can_open_right(lab, x, y) then
      open_right(lab, x, y);
      gen(lab, x + 1, y);
    end
    if 2 == order[i] && can_open_top(lab, x, y) then
      open_top(lab, x, y);
      gen(lab, x, y - 1);
    end
    if 3 == order[i] && can_open_bottom(lab, x, y) then
      open_bottom(lab, x, y);
      gen(lab, x, y + 1);
    end
  end
end

main
  def lab = init(10, 10);
  gen(lab, 0, 0);
  print_lab(lab);
end
