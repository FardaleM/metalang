let rec result sum (t:int array) maxIndex (cache:int array array) =
  if cache.[sum].[maxIndex] <> 0 then
    cache.[sum].[maxIndex]
  else
    if sum = 0 || maxIndex = 0 then
      1
    else
      let out0 = ref( 0 )
      let div = sum / t.[maxIndex]
      for i = 0 to div do
        out0 := (!out0) + result (sum - i * t.[maxIndex]) t (maxIndex - 1) cache
      cache.[sum].[maxIndex] <- (!out0)
      (!out0)

let () =
  let t = Array.init 8 (fun i ->
    0)
  t.[0] <- 1
  t.[1] <- 2
  t.[2] <- 5
  t.[3] <- 10
  t.[4] <- 20
  t.[5] <- 50
  t.[6] <- 100
  t.[7] <- 200
  let cache = Array.init 201 (fun j ->
    let o = Array.init 8 (fun k ->
      0)
    o)
  Printf.printf "%d" (result 200 t 7 cache)
 