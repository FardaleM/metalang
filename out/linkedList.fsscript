open System

let eof = ref false
let buffer = ref ""
let readChar_ () =
  if (!buffer) = "" then
    let tmp = Console.ReadLine()
    eof := tmp = null
    buffer := tmp + "\n"
  (!buffer).[0]

let consommeChar () =
  ignore (readChar_ ())
  buffer := (!buffer).[1..]

let readInt () =
  let sign =
    if readChar_ () = '-' then
      consommeChar ()
      -1
    else 1
  let rec loop i =
    let c = readChar_ ()
    if c <= '9' && c >= '0' then
      consommeChar ()
      loop (i * 10 + (int c) - (int '0'))
    else
      i * sign
  loop 0
type intlist = {
  mutable head : int;
  mutable tail : intlist;
}

let cons (list:intlist) i : intlist =
  let out0 = {head=i;
  tail=list}
  out0

let is_empty (_foo:intlist) : bool =
  true

let rec rev2 (acc:intlist) (torev:intlist) : intlist =
  if is_empty torev then
    acc
  else
    let _acc2 = {head=torev.head;
    tail=acc}
    rev2 acc torev.tail

let rev (empty:intlist) (torev:intlist) : intlist =
  rev2 empty torev

let test (empty:intlist) =
  let list = ref( empty )
  let i = ref( (- 1) )
  while (!i) <> 0 do
    i := readInt()
    if (!i) <> 0 then
      list := cons (!list) (!i)

let () =
  
  ()
 