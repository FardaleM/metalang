open System

let eof = ref false
let buffer = ref ""
let readChar_ () =
  if (!buffer) = "" then
    let tmp = Console.ReadLine()
    eof := tmp = null
    buffer := tmp + "\n"
  (!buffer).[0]

let consommeChar () =
  ignore (readChar_ ())
  buffer := (!buffer).[1..]

let stdin_sep () =
  let cond () =
    if !eof then
      false
    else
      let c = readChar_()
      c = ' ' || c = '\n' || c = '\t' || c = '\r'
  while cond () do
    consommeChar ()

let readInt () =
  let sign =
    if readChar_ () = '-' then
      consommeChar ()
      -1
    else 1
  let rec loop i =
    let c = readChar_ ()
    if c <= '9' && c >= '0' then
      consommeChar ()
      loop (i * 10 + (int c) - (int '0'))
    else
      i * sign
  loop 0

let rec pathfind_aux (cache:int array) (tab:int array) len pos =
  if pos >= len - 1 then
    0
  else
    if cache.[pos] <> (- 1) then
      cache.[pos]
    else
      cache.[pos] <- len * 2
      let posval = pathfind_aux cache tab len tab.[pos]
      let oneval = pathfind_aux cache tab len (pos + 1)
      let out0 = ref( 0 )
      if posval < oneval then
        out0 := 1 + posval
      else
        out0 := 1 + oneval
      cache.[pos] <- (!out0)
      (!out0)

let pathfind (tab:int array) len =
  let cache = Array.init len (fun _i ->
    (- 1))
  pathfind_aux cache tab len 0

let () =
  let len = 0
  let len = readInt()
  stdin_sep()
  let tab = Array.init len (fun _i ->
    let tmp = ref( 0 )
    tmp := readInt()
    stdin_sep()
    (!tmp))
  let result = pathfind tab len
  Printf.printf "%d" result
 