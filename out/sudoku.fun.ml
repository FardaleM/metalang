let read_sudoku () =
  let out0 = (Array.init (9 * 9) (fun  i -> Scanf.scanf "%d"
  (fun  k -> (
               (Scanf.scanf "%[\n \010]" (fun _ -> ()));
               k
               )
  ))) in
  out0
let print_sudoku sudoku0 =
  let rec g y =
    (if (y <= 8)
     then let rec h x =
            (if (x <= 8)
             then (
                    (Printf.printf "%d " sudoku0.((x + (y * 9))));
                    (if ((x mod 3) = 2)
                     then (
                            (Printf.printf " ");
                            (h (x + 1))
                            )
                     
                     else (h (x + 1)))
                    )
             
             else (
                    (Printf.printf "\n");
                    (if ((y mod 3) = 2)
                     then (
                            (Printf.printf "\n");
                            (g (y + 1))
                            )
                     
                     else (g (y + 1)))
                    )
             ) in
            (h 0)
     else (Printf.printf "\n")) in
    (g 0)
let sudoku_done s =
  let rec f i =
    (if (i <= 80)
     then (if (s.(i) = 0)
           then false
           else (f (i + 1)))
     else true) in
    (f 0)
let sudoku_error s =
  let out1 = false in
  let rec e x out1 =
    (if (x <= 8)
     then let out1 = ((((((((((((((((((((((((((((((((((((out1 || ((s.(x) <> 0) && (s.(x) = s.((x + 9))))) || ((s.(x) <> 0) && (s.(x) = s.((x + (9 * 2)))))) || ((s.((x + 9)) <> 0) && (s.((x + 9)) = s.((x + (9 * 2)))))) || ((s.(x) <> 0) && (s.(x) = s.((x + (9 * 3)))))) || ((s.((x + 9)) <> 0) && (s.((x + 9)) = s.((x + (9 * 3)))))) || ((s.((x + (9 * 2))) <> 0) && (s.((x + (9 * 2))) = s.((x + (9 * 3)))))) || ((s.(x) <> 0) && (s.(x) = s.((x + (9 * 4)))))) || ((s.((x + 9)) <> 0) && (s.((x + 9)) = s.((x + (9 * 4)))))) || ((s.((x + (9 * 2))) <> 0) && (s.((x + (9 * 2))) = s.((x + (9 * 4)))))) || ((s.((x + (9 * 3))) <> 0) && (s.((x + (9 * 3))) = s.((x + (9 * 4)))))) || ((s.(x) <> 0) && (s.(x) = s.((x + (9 * 5)))))) || ((s.((x + 9)) <> 0) && (s.((x + 9)) = s.((x + (9 * 5)))))) || ((s.((x + (9 * 2))) <> 0) && (s.((x + (9 * 2))) = s.((x + (9 * 5)))))) || ((s.((x + (9 * 3))) <> 0) && (s.((x + (9 * 3))) = s.((x + (9 * 5)))))) || ((s.((x + (9 * 4))) <> 0) && (s.((x + (9 * 4))) = s.((x + (9 * 5)))))) || ((s.(x) <> 0) && (s.(x) = s.((x + (9 * 6)))))) || ((s.((x + 9)) <> 0) && (s.((x + 9)) = s.((x + (9 * 6)))))) || ((s.((x + (9 * 2))) <> 0) && (s.((x + (9 * 2))) = s.((x + (9 * 6)))))) || ((s.((x + (9 * 3))) <> 0) && (s.((x + (9 * 3))) = s.((x + (9 * 6)))))) || ((s.((x + (9 * 4))) <> 0) && (s.((x + (9 * 4))) = s.((x + (9 * 6)))))) || ((s.((x + (9 * 5))) <> 0) && (s.((x + (9 * 5))) = s.((x + (9 * 6)))))) || ((s.(x) <> 0) && (s.(x) = s.((x + (9 * 7)))))) || ((s.((x + 9)) <> 0) && (s.((x + 9)) = s.((x + (9 * 7)))))) || ((s.((x + (9 * 2))) <> 0) && (s.((x + (9 * 2))) = s.((x + (9 * 7)))))) || ((s.((x + (9 * 3))) <> 0) && (s.((x + (9 * 3))) = s.((x + (9 * 7)))))) || ((s.((x + (9 * 4))) <> 0) && (s.((x + (9 * 4))) = s.((x + (9 * 7)))))) || ((s.((x + (9 * 5))) <> 0) && (s.((x + (9 * 5))) = s.((x + (9 * 7)))))) || ((s.((x + (9 * 6))) <> 0) && (s.((x + (9 * 6))) = s.((x + (9 * 7)))))) || ((s.(x) <> 0) && (s.(x) = s.((x + (9 * 8)))))) || ((s.((x + 9)) <> 0) && (s.((x + 9)) = s.((x + (9 * 8)))))) || ((s.((x + (9 * 2))) <> 0) && (s.((x + (9 * 2))) = s.((x + (9 * 8)))))) || ((s.((x + (9 * 3))) <> 0) && (s.((x + (9 * 3))) = s.((x + (9 * 8)))))) || ((s.((x + (9 * 4))) <> 0) && (s.((x + (9 * 4))) = s.((x + (9 * 8)))))) || ((s.((x + (9 * 5))) <> 0) && (s.((x + (9 * 5))) = s.((x + (9 * 8)))))) || ((s.((x + (9 * 6))) <> 0) && (s.((x + (9 * 6))) = s.((x + (9 * 8)))))) || ((s.((x + (9 * 7))) <> 0) && (s.((x + (9 * 7))) = s.((x + (9 * 8)))))) in
     (e (x + 1) out1)
     else let out2 = false in
     let rec d x out2 =
       (if (x <= 8)
        then let out2 = ((((((((((((((((((((((((((((((((((((out2 || ((s.((x * 9)) <> 0) && (s.((x * 9)) = s.(((x * 9) + 1))))) || ((s.((x * 9)) <> 0) && (s.((x * 9)) = s.(((x * 9) + 2))))) || ((s.(((x * 9) + 1)) <> 0) && (s.(((x * 9) + 1)) = s.(((x * 9) + 2))))) || ((s.((x * 9)) <> 0) && (s.((x * 9)) = s.(((x * 9) + 3))))) || ((s.(((x * 9) + 1)) <> 0) && (s.(((x * 9) + 1)) = s.(((x * 9) + 3))))) || ((s.(((x * 9) + 2)) <> 0) && (s.(((x * 9) + 2)) = s.(((x * 9) + 3))))) || ((s.((x * 9)) <> 0) && (s.((x * 9)) = s.(((x * 9) + 4))))) || ((s.(((x * 9) + 1)) <> 0) && (s.(((x * 9) + 1)) = s.(((x * 9) + 4))))) || ((s.(((x * 9) + 2)) <> 0) && (s.(((x * 9) + 2)) = s.(((x * 9) + 4))))) || ((s.(((x * 9) + 3)) <> 0) && (s.(((x * 9) + 3)) = s.(((x * 9) + 4))))) || ((s.((x * 9)) <> 0) && (s.((x * 9)) = s.(((x * 9) + 5))))) || ((s.(((x * 9) + 1)) <> 0) && (s.(((x * 9) + 1)) = s.(((x * 9) + 5))))) || ((s.(((x * 9) + 2)) <> 0) && (s.(((x * 9) + 2)) = s.(((x * 9) + 5))))) || ((s.(((x * 9) + 3)) <> 0) && (s.(((x * 9) + 3)) = s.(((x * 9) + 5))))) || ((s.(((x * 9) + 4)) <> 0) && (s.(((x * 9) + 4)) = s.(((x * 9) + 5))))) || ((s.((x * 9)) <> 0) && (s.((x * 9)) = s.(((x * 9) + 6))))) || ((s.(((x * 9) + 1)) <> 0) && (s.(((x * 9) + 1)) = s.(((x * 9) + 6))))) || ((s.(((x * 9) + 2)) <> 0) && (s.(((x * 9) + 2)) = s.(((x * 9) + 6))))) || ((s.(((x * 9) + 3)) <> 0) && (s.(((x * 9) + 3)) = s.(((x * 9) + 6))))) || ((s.(((x * 9) + 4)) <> 0) && (s.(((x * 9) + 4)) = s.(((x * 9) + 6))))) || ((s.(((x * 9) + 5)) <> 0) && (s.(((x * 9) + 5)) = s.(((x * 9) + 6))))) || ((s.((x * 9)) <> 0) && (s.((x * 9)) = s.(((x * 9) + 7))))) || ((s.(((x * 9) + 1)) <> 0) && (s.(((x * 9) + 1)) = s.(((x * 9) + 7))))) || ((s.(((x * 9) + 2)) <> 0) && (s.(((x * 9) + 2)) = s.(((x * 9) + 7))))) || ((s.(((x * 9) + 3)) <> 0) && (s.(((x * 9) + 3)) = s.(((x * 9) + 7))))) || ((s.(((x * 9) + 4)) <> 0) && (s.(((x * 9) + 4)) = s.(((x * 9) + 7))))) || ((s.(((x * 9) + 5)) <> 0) && (s.(((x * 9) + 5)) = s.(((x * 9) + 7))))) || ((s.(((x * 9) + 6)) <> 0) && (s.(((x * 9) + 6)) = s.(((x * 9) + 7))))) || ((s.((x * 9)) <> 0) && (s.((x * 9)) = s.(((x * 9) + 8))))) || ((s.(((x * 9) + 1)) <> 0) && (s.(((x * 9) + 1)) = s.(((x * 9) + 8))))) || ((s.(((x * 9) + 2)) <> 0) && (s.(((x * 9) + 2)) = s.(((x * 9) + 8))))) || ((s.(((x * 9) + 3)) <> 0) && (s.(((x * 9) + 3)) = s.(((x * 9) + 8))))) || ((s.(((x * 9) + 4)) <> 0) && (s.(((x * 9) + 4)) = s.(((x * 9) + 8))))) || ((s.(((x * 9) + 5)) <> 0) && (s.(((x * 9) + 5)) = s.(((x * 9) + 8))))) || ((s.(((x * 9) + 6)) <> 0) && (s.(((x * 9) + 6)) = s.(((x * 9) + 8))))) || ((s.(((x * 9) + 7)) <> 0) && (s.(((x * 9) + 7)) = s.(((x * 9) + 8))))) in
        (d (x + 1) out2)
        else let out3 = false in
        let rec c x out3 =
          (if (x <= 8)
           then let out3 = ((((((((((((((((((((((((((((((((((((out3 || ((s.(((((x mod 3) * 3) * 9) + ((x / 3) * 3))) <> 0) && (s.(((((x mod 3) * 3) * 9) + ((x / 3) * 3))) = s.((((((x mod 3) * 3) * 9) + ((x / 3) * 3)) + 1))))) || ((s.(((((x mod 3) * 3) * 9) + ((x / 3) * 3))) <> 0) && (s.(((((x mod 3) * 3) * 9) + ((x / 3) * 3))) = s.((((((x mod 3) * 3) * 9) + ((x / 3) * 3)) + 2))))) || ((s.((((((x mod 3) * 3) * 9) + ((x / 3) * 3)) + 1)) <> 0) && (s.((((((x mod 3) * 3) * 9) + ((x / 3) * 3)) + 1)) = s.((((((x mod 3) * 3) * 9) + ((x / 3) * 3)) + 2))))) || ((s.(((((x mod 3) * 3) * 9) + ((x / 3) * 3))) <> 0) && (s.(((((x mod 3) * 3) * 9) + ((x / 3) * 3))) = s.((((((x mod 3) * 3) + 1) * 9) + ((x / 3) * 3)))))) || ((s.((((((x mod 3) * 3) * 9) + ((x / 3) * 3)) + 1)) <> 0) && (s.((((((x mod 3) * 3) * 9) + ((x / 3) * 3)) + 1)) = s.((((((x mod 3) * 3) + 1) * 9) + ((x / 3) * 3)))))) || ((s.((((((x mod 3) * 3) * 9) + ((x / 3) * 3)) + 2)) <> 0) && (s.((((((x mod 3) * 3) * 9) + ((x / 3) * 3)) + 2)) = s.((((((x mod 3) * 3) + 1) * 9) + ((x / 3) * 3)))))) || ((s.(((((x mod 3) * 3) * 9) + ((x / 3) * 3))) <> 0) && (s.(((((x mod 3) * 3) * 9) + ((x / 3) * 3))) = s.(((((((x mod 3) * 3) + 1) * 9) + ((x / 3) * 3)) + 1))))) || ((s.((((((x mod 3) * 3) * 9) + ((x / 3) * 3)) + 1)) <> 0) && (s.((((((x mod 3) * 3) * 9) + ((x / 3) * 3)) + 1)) = s.(((((((x mod 3) * 3) + 1) * 9) + ((x / 3) * 3)) + 1))))) || ((s.((((((x mod 3) * 3) * 9) + ((x / 3) * 3)) + 2)) <> 0) && (s.((((((x mod 3) * 3) * 9) + ((x / 3) * 3)) + 2)) = s.(((((((x mod 3) * 3) + 1) * 9) + ((x / 3) * 3)) + 1))))) || ((s.((((((x mod 3) * 3) + 1) * 9) + ((x / 3) * 3))) <> 0) && (s.((((((x mod 3) * 3) + 1) * 9) + ((x / 3) * 3))) = s.(((((((x mod 3) * 3) + 1) * 9) + ((x / 3) * 3)) + 1))))) || ((s.(((((x mod 3) * 3) * 9) + ((x / 3) * 3))) <> 0) && (s.(((((x mod 3) * 3) * 9) + ((x / 3) * 3))) = s.(((((((x mod 3) * 3) + 1) * 9) + ((x / 3) * 3)) + 2))))) || ((s.((((((x mod 3) * 3) * 9) + ((x / 3) * 3)) + 1)) <> 0) && (s.((((((x mod 3) * 3) * 9) + ((x / 3) * 3)) + 1)) = s.(((((((x mod 3) * 3) + 1) * 9) + ((x / 3) * 3)) + 2))))) || ((s.((((((x mod 3) * 3) * 9) + ((x / 3) * 3)) + 2)) <> 0) && (s.((((((x mod 3) * 3) * 9) + ((x / 3) * 3)) + 2)) = s.(((((((x mod 3) * 3) + 1) * 9) + ((x / 3) * 3)) + 2))))) || ((s.((((((x mod 3) * 3) + 1) * 9) + ((x / 3) * 3))) <> 0) && (s.((((((x mod 3) * 3) + 1) * 9) + ((x / 3) * 3))) = s.(((((((x mod 3) * 3) + 1) * 9) + ((x / 3) * 3)) + 2))))) || ((s.(((((((x mod 3) * 3) + 1) * 9) + ((x / 3) * 3)) + 1)) <> 0) && (s.(((((((x mod 3) * 3) + 1) * 9) + ((x / 3) * 3)) + 1)) = s.(((((((x mod 3) * 3) + 1) * 9) + ((x / 3) * 3)) + 2))))) || ((s.(((((x mod 3) * 3) * 9) + ((x / 3) * 3))) <> 0) && (s.(((((x mod 3) * 3) * 9) + ((x / 3) * 3))) = s.((((((x mod 3) * 3) + 2) * 9) + ((x / 3) * 3)))))) || ((s.((((((x mod 3) * 3) * 9) + ((x / 3) * 3)) + 1)) <> 0) && (s.((((((x mod 3) * 3) * 9) + ((x / 3) * 3)) + 1)) = s.((((((x mod 3) * 3) + 2) * 9) + ((x / 3) * 3)))))) || ((s.((((((x mod 3) * 3) * 9) + ((x / 3) * 3)) + 2)) <> 0) && (s.((((((x mod 3) * 3) * 9) + ((x / 3) * 3)) + 2)) = s.((((((x mod 3) * 3) + 2) * 9) + ((x / 3) * 3)))))) || ((s.((((((x mod 3) * 3) + 1) * 9) + ((x / 3) * 3))) <> 0) && (s.((((((x mod 3) * 3) + 1) * 9) + ((x / 3) * 3))) = s.((((((x mod 3) * 3) + 2) * 9) + ((x / 3) * 3)))))) || ((s.(((((((x mod 3) * 3) + 1) * 9) + ((x / 3) * 3)) + 1)) <> 0) && (s.(((((((x mod 3) * 3) + 1) * 9) + ((x / 3) * 3)) + 1)) = s.((((((x mod 3) * 3) + 2) * 9) + ((x / 3) * 3)))))) || ((s.(((((((x mod 3) * 3) + 1) * 9) + ((x / 3) * 3)) + 2)) <> 0) && (s.(((((((x mod 3) * 3) + 1) * 9) + ((x / 3) * 3)) + 2)) = s.((((((x mod 3) * 3) + 2) * 9) + ((x / 3) * 3)))))) || ((s.(((((x mod 3) * 3) * 9) + ((x / 3) * 3))) <> 0) && (s.(((((x mod 3) * 3) * 9) + ((x / 3) * 3))) = s.(((((((x mod 3) * 3) + 2) * 9) + ((x / 3) * 3)) + 1))))) || ((s.((((((x mod 3) * 3) * 9) + ((x / 3) * 3)) + 1)) <> 0) && (s.((((((x mod 3) * 3) * 9) + ((x / 3) * 3)) + 1)) = s.(((((((x mod 3) * 3) + 2) * 9) + ((x / 3) * 3)) + 1))))) || ((s.((((((x mod 3) * 3) * 9) + ((x / 3) * 3)) + 2)) <> 0) && (s.((((((x mod 3) * 3) * 9) + ((x / 3) * 3)) + 2)) = s.(((((((x mod 3) * 3) + 2) * 9) + ((x / 3) * 3)) + 1))))) || ((s.((((((x mod 3) * 3) + 1) * 9) + ((x / 3) * 3))) <> 0) && (s.((((((x mod 3) * 3) + 1) * 9) + ((x / 3) * 3))) = s.(((((((x mod 3) * 3) + 2) * 9) + ((x / 3) * 3)) + 1))))) || ((s.(((((((x mod 3) * 3) + 1) * 9) + ((x / 3) * 3)) + 1)) <> 0) && (s.(((((((x mod 3) * 3) + 1) * 9) + ((x / 3) * 3)) + 1)) = s.(((((((x mod 3) * 3) + 2) * 9) + ((x / 3) * 3)) + 1))))) || ((s.(((((((x mod 3) * 3) + 1) * 9) + ((x / 3) * 3)) + 2)) <> 0) && (s.(((((((x mod 3) * 3) + 1) * 9) + ((x / 3) * 3)) + 2)) = s.(((((((x mod 3) * 3) + 2) * 9) + ((x / 3) * 3)) + 1))))) || ((s.((((((x mod 3) * 3) + 2) * 9) + ((x / 3) * 3))) <> 0) && (s.((((((x mod 3) * 3) + 2) * 9) + ((x / 3) * 3))) = s.(((((((x mod 3) * 3) + 2) * 9) + ((x / 3) * 3)) + 1))))) || ((s.(((((x mod 3) * 3) * 9) + ((x / 3) * 3))) <> 0) && (s.(((((x mod 3) * 3) * 9) + ((x / 3) * 3))) = s.(((((((x mod 3) * 3) + 2) * 9) + ((x / 3) * 3)) + 2))))) || ((s.((((((x mod 3) * 3) * 9) + ((x / 3) * 3)) + 1)) <> 0) && (s.((((((x mod 3) * 3) * 9) + ((x / 3) * 3)) + 1)) = s.(((((((x mod 3) * 3) + 2) * 9) + ((x / 3) * 3)) + 2))))) || ((s.((((((x mod 3) * 3) * 9) + ((x / 3) * 3)) + 2)) <> 0) && (s.((((((x mod 3) * 3) * 9) + ((x / 3) * 3)) + 2)) = s.(((((((x mod 3) * 3) + 2) * 9) + ((x / 3) * 3)) + 2))))) || ((s.((((((x mod 3) * 3) + 1) * 9) + ((x / 3) * 3))) <> 0) && (s.((((((x mod 3) * 3) + 1) * 9) + ((x / 3) * 3))) = s.(((((((x mod 3) * 3) + 2) * 9) + ((x / 3) * 3)) + 2))))) || ((s.(((((((x mod 3) * 3) + 1) * 9) + ((x / 3) * 3)) + 1)) <> 0) && (s.(((((((x mod 3) * 3) + 1) * 9) + ((x / 3) * 3)) + 1)) = s.(((((((x mod 3) * 3) + 2) * 9) + ((x / 3) * 3)) + 2))))) || ((s.(((((((x mod 3) * 3) + 1) * 9) + ((x / 3) * 3)) + 2)) <> 0) && (s.(((((((x mod 3) * 3) + 1) * 9) + ((x / 3) * 3)) + 2)) = s.(((((((x mod 3) * 3) + 2) * 9) + ((x / 3) * 3)) + 2))))) || ((s.((((((x mod 3) * 3) + 2) * 9) + ((x / 3) * 3))) <> 0) && (s.((((((x mod 3) * 3) + 2) * 9) + ((x / 3) * 3))) = s.(((((((x mod 3) * 3) + 2) * 9) + ((x / 3) * 3)) + 2))))) || ((s.(((((((x mod 3) * 3) + 2) * 9) + ((x / 3) * 3)) + 1)) <> 0) && (s.(((((((x mod 3) * 3) + 2) * 9) + ((x / 3) * 3)) + 1)) = s.(((((((x mod 3) * 3) + 2) * 9) + ((x / 3) * 3)) + 2))))) in
           (c (x + 1) out3)
           else ((out1 || out2) || out3)) in
          (c 0 out3)) in
       (d 0 out2)) in
    (e 0 out1)
let rec solve sudoku0 =
  (if (sudoku_error sudoku0)
   then false
   else (if (sudoku_done sudoku0)
         then true
         else let rec a i =
                (if (i <= 80)
                 then (if (sudoku0.(i) = 0)
                       then let rec b p =
                              (if (p <= 9)
                               then (
                                      sudoku0.(i) <- p;
                                      (if (solve sudoku0)
                                       then true
                                       else (b (p + 1)))
                                      )
                               
                               else (
                                      sudoku0.(i) <- 0;
                                      false
                                      )
                               ) in
                              (b 1)
                       else (a (i + 1)))
                 else false) in
                (a 0)))
let main =
  let sudoku0 = (read_sudoku ()) in
  (
    (print_sudoku sudoku0);
    (if (solve sudoku0)
     then (
            (print_sudoku sudoku0);
            ()
            )
     
     else (Printf.printf "no solution\n"))
    )
  

