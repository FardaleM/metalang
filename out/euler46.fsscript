let eratostene (t:int array) max0 =
  let n = ref( 0 )
  for i = 2 to max0 - 1 do
    if t.[i] = i then
        n := (!n) + 1
        if max0 / i > i then
            let j = ref( i * i )
            while (!j) < max0 && (!j) > 0 do
              t.[(!j)] <- 0
              j := (!j) + i
            
  (!n)

let () =
  let maximumprimes = 6000
  let era = Array.init maximumprimes (fun j_ ->
    j_)
  let nprimes = eratostene era maximumprimes
  let primes = Array.create nprimes 0
  let l = ref( 0 )
  for k = 2 to maximumprimes - 1 do
    if era.[k] = k then
        primes.[(!l)] <- k
        l := (!l) + 1
  Printf.printf "%d == %d\n" (!l) nprimes
  let canbe = Array.create maximumprimes false
  for i = 0 to nprimes - 1 do
    for j = 0 to maximumprimes - 1 do
      let n = primes.[i] + 2 * j * j
      if n < maximumprimes then
        canbe.[n] <- true
        
  for m = 1 to maximumprimes do
    let m2 = m * 2 + 1
    if m2 < maximumprimes && (not canbe.[m2]) then
      Printf.printf "%d\n" m2
      
 