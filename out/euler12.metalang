def int max2_ (int a, int b)
  if a > b
  then
    return a
  else
    return b
  end
end

def int max2 (int a, int b)
  return max2_(a, b)
end

def int eratostene (array<int> t, int max)
  def int n = 0
  for i = 2 to  max - 1
  do
    if t[i] == i
    then
      def int j = i * i
      n = n + 1
      while j < max && j > 0
      do
        t[j] = 0
        j = j + i
      end
    end
  end
  return n
end

def int fillPrimesFactors (array<int> t, int n, array<int> primes, int nprimes)
  for i = 0 to  nprimes - 1
  do
    def int d = primes[i]
    while n % d == 0
    do
      t[d] = t[d] + 1
      n = n / d
    end
    if n == 1
    then
      return primes[i]
    end
  end
  return n
end

def int find (int ndiv2)
  def int maximumprimes = 110
  def array<int> era[maximumprimes] with j do
                                             return j
  end
  def int nprimes = eratostene(era, maximumprimes)
  def array<int> primes[nprimes] with o do
                                          return 0
  end
  def int l = 0
  for k = 2 to  maximumprimes - 1
  do
    if era[k] == k
    then
      primes[l] = k
      l = l + 1
    end
  end
  for n = 1 to  10000
  do
    def array<int> primesFactors[n + 2] with m do
                                                 return 0
    end
    def int max = max2(fillPrimesFactors(primesFactors, n, primes, nprimes), fillPrimesFactors(primesFactors, n + 1, primes, nprimes))
    primesFactors[2] = primesFactors[2] - 1
    def int ndivs = 1
    for i = 0 to  max
    do
      if primesFactors[i] != 0
      then
        ndivs = ndivs * (1 + primesFactors[i])
      end
    end
    if ndivs > ndiv2
    then
      return n * (n + 1) / 2
    end
    //  print "n=" print n print "\t" print (n * (n + 1) / 2 ) print " " print ndivs print "\n" 
  end
  return 0
end

main
  print int find(500)
  print string "\n"
end

