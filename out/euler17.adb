
with ada.text_io, ada.Integer_text_IO, Ada.Text_IO.Text_Streams, Ada.Strings.Fixed;
use ada.text_io, ada.Integer_text_IO, Ada.Strings, Ada.Strings.Fixed;

procedure euler17 is

  two : Integer;
  twenty : Integer;
  twelve : Integer;
  three : Integer;
  thousand : Integer;
  thirty : Integer;
  thirteen : Integer;
  ten : Integer;
  sixty : Integer;
  sixteen : Integer;
  six : Integer;
  seventy : Integer;
  seventeen : Integer;
  seven : Integer;
  one_to_twenty : Integer;
  one_to_thirty : Integer;
  one_to_ten : Integer;
  one_to_sixty : Integer;
  one_to_seventy : Integer;
  one_to_ninety_nine : Integer;
  one_to_ninety : Integer;
  one_to_nine : Integer;
  one_to_forty : Integer;
  one_to_fifty : Integer;
  one_to_eighty : Integer;
  one : Integer;
  ninety : Integer;
  nineteen : Integer;
  nine : Integer;
  hundred_and : Integer;
  hundred : Integer;
  fourteen : Integer;
  four : Integer;
  forty : Integer;
  five : Integer;
  fifty : Integer;
  fifteen : Integer;
  eleven : Integer;
  eighty : Integer;
  eighteen : Integer;
  eight : Integer;
begin
  one := (3);
  two := (3);
  three := (5);
  four := (4);
  five := (4);
  six := (3);
  seven := (5);
  eight := (5);
  nine := (4);
  ten := (3);
  eleven := (6);
  twelve := (6);
  thirteen := (8);
  fourteen := (8);
  fifteen := (7);
  sixteen := (7);
  seventeen := (9);
  eighteen := (8);
  nineteen := (8);
  twenty := (6);
  thirty := (6);
  forty := (5);
  fifty := (5);
  sixty := (5);
  seventy := (7);
  eighty := (6);
  ninety := (6);
  hundred := (7);
  thousand := (8);
  String'Write (Text_Streams.Stream (Current_Output), Trim(Integer'Image(one +
  two + three + four + five), Left));
  String'Write (Text_Streams.Stream (Current_Output), "" & Character'Val(10) & "");
  hundred_and := (10);
  one_to_nine := one + two + three + four + five + six + seven + eight + nine;
  String'Write (Text_Streams.Stream (Current_Output), Trim(Integer'Image(one_to_nine), Left));
  String'Write (Text_Streams.Stream (Current_Output), "" & Character'Val(10) & "");
  one_to_ten := one_to_nine + ten;
  one_to_twenty := one_to_ten + eleven + twelve + thirteen + fourteen + fifteen + sixteen + seventeen + eighteen + nineteen + twenty;
  one_to_thirty := one_to_twenty + twenty * (9) + one_to_nine + thirty;
  one_to_forty := one_to_thirty + thirty * (9) + one_to_nine + forty;
  one_to_fifty := one_to_forty + forty * (9) + one_to_nine + fifty;
  one_to_sixty := one_to_fifty + fifty * (9) + one_to_nine + sixty;
  one_to_seventy := one_to_sixty + sixty * (9) + one_to_nine + seventy;
  one_to_eighty := one_to_seventy + seventy * (9) + one_to_nine + eighty;
  one_to_ninety := one_to_eighty + eighty * (9) + one_to_nine + ninety;
  one_to_ninety_nine := one_to_ninety + ninety * (9) + one_to_nine;
  String'Write (Text_Streams.Stream (Current_Output), Trim(Integer'Image(one_to_ninety_nine), Left));
  String'Write (Text_Streams.Stream (Current_Output), "" & Character'Val(10) & "");
  String'Write (Text_Streams.Stream (Current_Output), Trim(Integer'Image((100) *
  one_to_nine + one_to_ninety_nine * (10) + hundred_and * (9) * (99) +
  hundred * (9) + one + thousand), Left));
  String'Write (Text_Streams.Stream (Current_Output), "" & Character'Val(10) & "");
end;
