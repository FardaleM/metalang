
open System
let eof = ref false
let buffer = ref ""
let readChar_ () =
  if (!buffer) = "" then
    let tmp = Console.ReadLine()
    eof := tmp = null
    buffer := tmp + "\n"
  (!buffer).[0]

let consommeChar () =
  ignore (readChar_ ())
  buffer := (!buffer).[1..]

let stdin_sep () =
  let cond () =
    if !eof then
      false
    else
      let c = readChar_()
      c = ' ' || c = '\n' || c = '\t' || c = '\r'
  while cond () do
    consommeChar ()

let readInt () =
  let sign =
    if readChar_ () = '-' then
      consommeChar ()
      -1
    else 1
  let rec loop i =
    let c = readChar_ ()
    if c <= '9' && c >= '0' then
      consommeChar ()
      loop (i * 10 + (int c) - (int '0'))
    else
      i * sign
  loop 0
type toto = {
  mutable foo : int;
  mutable bar : int;
  mutable blah : int;
};;

let mktoto v1 : toto =
  let t = {foo=v1;
  bar=0;
  blah=0}
  t

let result (t:toto array) len =
  let out0 = ref( 0 )
  for j = 0 to len - 1 do
    t.[j].blah <- t.[j].blah + 1
    out0 := (!out0) + t.[j].foo + t.[j].blah * t.[j].bar + t.[j].bar * t.[j].foo
  (!out0)

let () =
  let t = Array.init 4 (fun i ->
    mktoto i)
  t.[0].bar <- readInt()
  stdin_sep();
  t.[1].blah <- readInt()
  let titi = result t 4
  Printf.printf "%d%d" titi t.[2].blah
 