
open System
let eof = ref false
let buffer = ref ""
let readChar_ () =
  if (!buffer) = "" then
    let tmp = Console.ReadLine()
    eof := tmp = null
    buffer := tmp + "\n"
  (!buffer).[0]

let consommeChar () =
  ignore (readChar_ ())
  buffer := (!buffer).[1..]

let stdin_sep () =
  let cond () =
    if !eof then
      false
    else
      let c = readChar_()
      c = ' ' || c = '\n' || c = '\t' || c = '\r'
  while cond () do
    consommeChar ()

let readInt () =
  let sign =
    if readChar_ () = '-' then
      consommeChar ()
      -1
    else 1
  let rec loop i =
    let c = readChar_ ()
    if c <= '9' && c >= '0' then
      consommeChar ()
      loop (i * 10 + (int c) - (int '0'))
    else
      i * sign
  loop 0
(*
  Ce test a été généré par Metalang.
*)
exception Found_1 of int

let result len (tab:int array) =
  try
  let tab2 = Array.create len false
  for i1 = 0 to len - 1 do
    Printf.printf "%d " tab.[i1]
    tab2.[tab.[i1]] <- true
  Printf.printf "\n"
  for i2 = 0 to len - 1 do
    if (not tab2.[i2]) then
      raise (Found_1(i2))
      
  (- 1)
  with Found_1 (out) -> out

let () =
  let len = readInt()
  stdin_sep();
  Printf.printf "%d\n" len
  let tab = Array.init len (fun _a ->
    let b = readInt()
    stdin_sep();
    b)
  Printf.printf "%d\n" (result len tab)
 