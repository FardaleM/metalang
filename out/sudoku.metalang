//  lit un sudoku sur l'entrée standard 
def array<int> read_sudoku()
  def array<int> out[9 * 9] with i do
                                     def read int k
                                     skip
                                     return k
  end
  return out
end

//  affiche un sudoku 
def void print_sudoku(array<int> sudoku)
  for y = 0 to  8
  do
    for x = 0 to  8
    do
      print int sudoku[x + y * 9]
      print string " "
      if x % 3 == 2
      then
        print string " "
      end
    end
    print string "\n"
    if y % 3 == 2
    then
      print string "\n"
    end
  end
  print string "\n"
end

//  dit si les variables sont toutes différentes 
//  dit si les variables sont toutes différentes 
//  dit si le sudoku est terminé de remplir 
def bool sudoku_done(array<int> s)
  for i = 0 to  80
  do
    if s[i] == 0
    then
      return false
    end
  end
  return true
end

//  dit si il y a une erreur dans le sudoku 
def bool sudoku_error(array<int> s)
  def bool out1 = false
  for x = 0 to  8
  do
    out1 = out1 || s[x] != 0 && s[x] == s[x + 9] || s[x] != 0 && s[x] == s[x + 9 * 2] || s[x + 9] != 0 && s[x + 9] == s[x + 9 * 2] || s[x] != 0 && s[x] == s[x + 9 * 3] || s[x + 9] != 0 && s[x + 9] == s[x + 9 * 3] || s[x + 9 * 2] != 0 && s[x + 9 * 2] == s[x + 9 * 3] || s[x] != 0 && s[x] == s[x + 9 * 4] || s[x + 9] != 0 && s[x + 9] == s[x + 9 * 4] || s[x + 9 * 2] != 0 && s[x + 9 * 2] == s[x + 9 * 4] || s[x + 9 * 3] != 0 && s[x + 9 * 3] == s[x + 9 * 4] || s[x] != 0 && s[x] == s[x + 9 * 5] || s[x + 9] != 0 && s[x + 9] == s[x + 9 * 5] || s[x + 9 * 2] != 0 && s[x + 9 * 2] == s[x + 9 * 5] || s[x + 9 * 3] != 0 && s[x + 9 * 3] == s[x + 9 * 5] || s[x + 9 * 4] != 0 && s[x + 9 * 4] == s[x + 9 * 5] || s[x] != 0 && s[x] == s[x + 9 * 6] || s[x + 9] != 0 && s[x + 9] == s[x + 9 * 6] || s[x + 9 * 2] != 0 && s[x + 9 * 2] == s[x + 9 * 6] || s[x + 9 * 3] != 0 && s[x + 9 * 3] == s[x + 9 * 6] || s[x + 9 * 4] != 0 && s[x + 9 * 4] == s[x + 9 * 6] || s[x + 9 * 5] != 0 && s[x + 9 * 5] == s[x + 9 * 6] || s[x] != 0 && s[x] == s[x + 9 * 7] || s[x + 9] != 0 && s[x + 9] == s[x + 9 * 7] || s[x + 9 * 2] != 0 && s[x + 9 * 2] == s[x + 9 * 7] || s[x + 9 * 3] != 0 && s[x + 9 * 3] == s[x + 9 * 7] || s[x + 9 * 4] != 0 && s[x + 9 * 4] == s[x + 9 * 7] || s[x + 9 * 5] != 0 && s[x + 9 * 5] == s[x + 9 * 7] || s[x + 9 * 6] != 0 && s[x + 9 * 6] == s[x + 9 * 7] || s[x] != 0 && s[x] == s[x + 9 * 8] || s[x + 9] != 0 && s[x + 9] == s[x + 9 * 8] || s[x + 9 * 2] != 0 && s[x + 9 * 2] == s[x + 9 * 8] || s[x + 9 * 3] != 0 && s[x + 9 * 3] == s[x + 9 * 8] || s[x + 9 * 4] != 0 && s[x + 9 * 4] == s[x + 9 * 8] || s[x + 9 * 5] != 0 && s[x + 9 * 5] == s[x + 9 * 8] || s[x + 9 * 6] != 0 && s[x + 9 * 6] == s[x + 9 * 8] || s[x + 9 * 7] != 0 && s[x + 9 * 7] == s[x + 9 * 8]
  end
  def bool out2 = false
  for x = 0 to  8
  do
    out2 = out2 || s[x * 9] != 0 && s[x * 9] == s[x * 9 + 1] || s[x * 9] != 0 && s[x * 9] == s[x * 9 + 2] || s[x * 9 + 1] != 0 && s[x * 9 + 1] == s[x * 9 + 2] || s[x * 9] != 0 && s[x * 9] == s[x * 9 + 3] || s[x * 9 + 1] != 0 && s[x * 9 + 1] == s[x * 9 + 3] || s[x * 9 + 2] != 0 && s[x * 9 + 2] == s[x * 9 + 3] || s[x * 9] != 0 && s[x * 9] == s[x * 9 + 4] || s[x * 9 + 1] != 0 && s[x * 9 + 1] == s[x * 9 + 4] || s[x * 9 + 2] != 0 && s[x * 9 + 2] == s[x * 9 + 4] || s[x * 9 + 3] != 0 && s[x * 9 + 3] == s[x * 9 + 4] || s[x * 9] != 0 && s[x * 9] == s[x * 9 + 5] || s[x * 9 + 1] != 0 && s[x * 9 + 1] == s[x * 9 + 5] || s[x * 9 + 2] != 0 && s[x * 9 + 2] == s[x * 9 + 5] || s[x * 9 + 3] != 0 && s[x * 9 + 3] == s[x * 9 + 5] || s[x * 9 + 4] != 0 && s[x * 9 + 4] == s[x * 9 + 5] || s[x * 9] != 0 && s[x * 9] == s[x * 9 + 6] || s[x * 9 + 1] != 0 && s[x * 9 + 1] == s[x * 9 + 6] || s[x * 9 + 2] != 0 && s[x * 9 + 2] == s[x * 9 + 6] || s[x * 9 + 3] != 0 && s[x * 9 + 3] == s[x * 9 + 6] || s[x * 9 + 4] != 0 && s[x * 9 + 4] == s[x * 9 + 6] || s[x * 9 + 5] != 0 && s[x * 9 + 5] == s[x * 9 + 6] || s[x * 9] != 0 && s[x * 9] == s[x * 9 + 7] || s[x * 9 + 1] != 0 && s[x * 9 + 1] == s[x * 9 + 7] || s[x * 9 + 2] != 0 && s[x * 9 + 2] == s[x * 9 + 7] || s[x * 9 + 3] != 0 && s[x * 9 + 3] == s[x * 9 + 7] || s[x * 9 + 4] != 0 && s[x * 9 + 4] == s[x * 9 + 7] || s[x * 9 + 5] != 0 && s[x * 9 + 5] == s[x * 9 + 7] || s[x * 9 + 6] != 0 && s[x * 9 + 6] == s[x * 9 + 7] || s[x * 9] != 0 && s[x * 9] == s[x * 9 + 8] || s[x * 9 + 1] != 0 && s[x * 9 + 1] == s[x * 9 + 8] || s[x * 9 + 2] != 0 && s[x * 9 + 2] == s[x * 9 + 8] || s[x * 9 + 3] != 0 && s[x * 9 + 3] == s[x * 9 + 8] || s[x * 9 + 4] != 0 && s[x * 9 + 4] == s[x * 9 + 8] || s[x * 9 + 5] != 0 && s[x * 9 + 5] == s[x * 9 + 8] || s[x * 9 + 6] != 0 && s[x * 9 + 6] == s[x * 9 + 8] || s[x * 9 + 7] != 0 && s[x * 9 + 7] == s[x * 9 + 8]
  end
  def bool out3 = false
  for x = 0 to  8
  do
    out3 = out3 || s[(x % 3) * 3 * 9 + (x / 3) * 3] != 0 && s[(x % 3) * 3 * 9 + (x / 3) * 3] == s[(x % 3) * 3 * 9 + (x / 3) * 3 + 1] || s[(x % 3) * 3 * 9 + (x / 3) * 3] != 0 && s[(x % 3) * 3 * 9 + (x / 3) * 3] == s[(x % 3) * 3 * 9 + (x / 3) * 3 + 2] || s[(x % 3) * 3 * 9 + (x / 3) * 3 + 1] != 0 && s[(x % 3) * 3 * 9 + (x / 3) * 3 + 1] == s[(x % 3) * 3 * 9 + (x / 3) * 3 + 2] || s[(x % 3) * 3 * 9 + (x / 3) * 3] != 0 && s[(x % 3) * 3 * 9 + (x / 3) * 3] == s[((x % 3) * 3 + 1) * 9 + (x / 3) * 3] || s[(x % 3) * 3 * 9 + (x / 3) * 3 + 1] != 0 && s[(x % 3) * 3 * 9 + (x / 3) * 3 + 1] == s[((x % 3) * 3 + 1) * 9 + (x / 3) * 3] || s[(x % 3) * 3 * 9 + (x / 3) * 3 + 2] != 0 && s[(x % 3) * 3 * 9 + (x / 3) * 3 + 2] == s[((x % 3) * 3 + 1) * 9 + (x / 3) * 3] || s[(x % 3) * 3 * 9 + (x / 3) * 3] != 0 && s[(x % 3) * 3 * 9 + (x / 3) * 3] == s[((x % 3) * 3 + 1) * 9 + (x / 3) * 3 + 1] || s[(x % 3) * 3 * 9 + (x / 3) * 3 + 1] != 0 && s[(x % 3) * 3 * 9 + (x / 3) * 3 + 1] == s[((x % 3) * 3 + 1) * 9 + (x / 3) * 3 + 1] || s[(x % 3) * 3 * 9 + (x / 3) * 3 + 2] != 0 && s[(x % 3) * 3 * 9 + (x / 3) * 3 + 2] == s[((x % 3) * 3 + 1) * 9 + (x / 3) * 3 + 1] || s[((x % 3) * 3 + 1) * 9 + (x / 3) * 3] != 0 && s[((x % 3) * 3 + 1) * 9 + (x / 3) * 3] == s[((x % 3) * 3 + 1) * 9 + (x / 3) * 3 + 1] || s[(x % 3) * 3 * 9 + (x / 3) * 3] != 0 && s[(x % 3) * 3 * 9 + (x / 3) * 3] == s[((x % 3) * 3 + 1) * 9 + (x / 3) * 3 + 2] || s[(x % 3) * 3 * 9 + (x / 3) * 3 + 1] != 0 && s[(x % 3) * 3 * 9 + (x / 3) * 3 + 1] == s[((x % 3) * 3 + 1) * 9 + (x / 3) * 3 + 2] || s[(x % 3) * 3 * 9 + (x / 3) * 3 + 2] != 0 && s[(x % 3) * 3 * 9 + (x / 3) * 3 + 2] == s[((x % 3) * 3 + 1) * 9 + (x / 3) * 3 + 2] || s[((x % 3) * 3 + 1) * 9 + (x / 3) * 3] != 0 && s[((x % 3) * 3 + 1) * 9 + (x / 3) * 3] == s[((x % 3) * 3 + 1) * 9 + (x / 3) * 3 + 2] || s[((x % 3) * 3 + 1) * 9 + (x / 3) * 3 + 1] != 0 && s[((x % 3) * 3 + 1) * 9 + (x / 3) * 3 + 1] == s[((x % 3) * 3 + 1) * 9 + (x / 3) * 3 + 2] || s[(x % 3) * 3 * 9 + (x / 3) * 3] != 0 && s[(x % 3) * 3 * 9 + (x / 3) * 3] == s[((x % 3) * 3 + 2) * 9 + (x / 3) * 3] || s[(x % 3) * 3 * 9 + (x / 3) * 3 + 1] != 0 && s[(x % 3) * 3 * 9 + (x / 3) * 3 + 1] == s[((x % 3) * 3 + 2) * 9 + (x / 3) * 3] || s[(x % 3) * 3 * 9 + (x / 3) * 3 + 2] != 0 && s[(x % 3) * 3 * 9 + (x / 3) * 3 + 2] == s[((x % 3) * 3 + 2) * 9 + (x / 3) * 3] || s[((x % 3) * 3 + 1) * 9 + (x / 3) * 3] != 0 && s[((x % 3) * 3 + 1) * 9 + (x / 3) * 3] == s[((x % 3) * 3 + 2) * 9 + (x / 3) * 3] || s[((x % 3) * 3 + 1) * 9 + (x / 3) * 3 + 1] != 0 && s[((x % 3) * 3 + 1) * 9 + (x / 3) * 3 + 1] == s[((x % 3) * 3 + 2) * 9 + (x / 3) * 3] || s[((x % 3) * 3 + 1) * 9 + (x / 3) * 3 + 2] != 0 && s[((x % 3) * 3 + 1) * 9 + (x / 3) * 3 + 2] == s[((x % 3) * 3 + 2) * 9 + (x / 3) * 3] || s[(x % 3) * 3 * 9 + (x / 3) * 3] != 0 && s[(x % 3) * 3 * 9 + (x / 3) * 3] == s[((x % 3) * 3 + 2) * 9 + (x / 3) * 3 + 1] || s[(x % 3) * 3 * 9 + (x / 3) * 3 + 1] != 0 && s[(x % 3) * 3 * 9 + (x / 3) * 3 + 1] == s[((x % 3) * 3 + 2) * 9 + (x / 3) * 3 + 1] || s[(x % 3) * 3 * 9 + (x / 3) * 3 + 2] != 0 && s[(x % 3) * 3 * 9 + (x / 3) * 3 + 2] == s[((x % 3) * 3 + 2) * 9 + (x / 3) * 3 + 1] || s[((x % 3) * 3 + 1) * 9 + (x / 3) * 3] != 0 && s[((x % 3) * 3 + 1) * 9 + (x / 3) * 3] == s[((x % 3) * 3 + 2) * 9 + (x / 3) * 3 + 1] || s[((x % 3) * 3 + 1) * 9 + (x / 3) * 3 + 1] != 0 && s[((x % 3) * 3 + 1) * 9 + (x / 3) * 3 + 1] == s[((x % 3) * 3 + 2) * 9 + (x / 3) * 3 + 1] || s[((x % 3) * 3 + 1) * 9 + (x / 3) * 3 + 2] != 0 && s[((x % 3) * 3 + 1) * 9 + (x / 3) * 3 + 2] == s[((x % 3) * 3 + 2) * 9 + (x / 3) * 3 + 1] || s[((x % 3) * 3 + 2) * 9 + (x / 3) * 3] != 0 && s[((x % 3) * 3 + 2) * 9 + (x / 3) * 3] == s[((x % 3) * 3 + 2) * 9 + (x / 3) * 3 + 1] || s[(x % 3) * 3 * 9 + (x / 3) * 3] != 0 && s[(x % 3) * 3 * 9 + (x / 3) * 3] == s[((x % 3) * 3 + 2) * 9 + (x / 3) * 3 + 2] || s[(x % 3) * 3 * 9 + (x / 3) * 3 + 1] != 0 && s[(x % 3) * 3 * 9 + (x / 3) * 3 + 1] == s[((x % 3) * 3 + 2) * 9 + (x / 3) * 3 + 2] || s[(x % 3) * 3 * 9 + (x / 3) * 3 + 2] != 0 && s[(x % 3) * 3 * 9 + (x / 3) * 3 + 2] == s[((x % 3) * 3 + 2) * 9 + (x / 3) * 3 + 2] || s[((x % 3) * 3 + 1) * 9 + (x / 3) * 3] != 0 && s[((x % 3) * 3 + 1) * 9 + (x / 3) * 3] == s[((x % 3) * 3 + 2) * 9 + (x / 3) * 3 + 2] || s[((x % 3) * 3 + 1) * 9 + (x / 3) * 3 + 1] != 0 && s[((x % 3) * 3 + 1) * 9 + (x / 3) * 3 + 1] == s[((x % 3) * 3 + 2) * 9 + (x / 3) * 3 + 2] || s[((x % 3) * 3 + 1) * 9 + (x / 3) * 3 + 2] != 0 && s[((x % 3) * 3 + 1) * 9 + (x / 3) * 3 + 2] == s[((x % 3) * 3 + 2) * 9 + (x / 3) * 3 + 2] || s[((x % 3) * 3 + 2) * 9 + (x / 3) * 3] != 0 && s[((x % 3) * 3 + 2) * 9 + (x / 3) * 3] == s[((x % 3) * 3 + 2) * 9 + (x / 3) * 3 + 2] || s[((x % 3) * 3 + 2) * 9 + (x / 3) * 3 + 1] != 0 && s[((x % 3) * 3 + 2) * 9 + (x / 3) * 3 + 1] == s[((x % 3) * 3 + 2) * 9 + (x / 3) * 3 + 2]
  end
  return out1 || out2 || out3
end

//  résout le sudoku
def bool solve(array<int> sudoku)
  if sudoku_error(sudoku)
  then
    return false
  end
  if sudoku_done(sudoku)
  then
    return true
  end
  for i = 0 to  80
  do
    if sudoku[i] == 0
    then
      for p = 1 to  9
      do
        sudoku[i] = p
        if solve(sudoku)
        then
          return true
        end
      end
      sudoku[i] = 0
      return false
    end
  end
  return false
end

main
  def array<int> sudoku = read_sudoku()
  print_sudoku(sudoku)
  if solve(sudoku)
  then
    print_sudoku(sudoku)
  else
    print string "no solution\n"
  end
end

