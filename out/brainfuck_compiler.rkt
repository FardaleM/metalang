#lang racket
(require racket/block)
(define array_init_withenv (lambda (len f env)
  (build-vector len (lambda (i)
    (let ([o ((f i) env)])
      (block
        (set! env (car o))
        (cadr o)
      )
    )))))

(define main (let ([input #\Space])
               (let ([current_pos 500])
                 (let ([a 1000])
                   (let ([mem_ (array_init_withenv a (lambda (i) 
                                                       (lambda (_) (let ([b 0])
                                                                    (list '() b)))) '())])
                   (block
                     (vector-set! mem_ current_pos (+ (vector-ref mem_ current_pos) 1))
                     (vector-set! mem_ current_pos (+ (vector-ref mem_ current_pos) 1))
                     (vector-set! mem_ current_pos (+ (vector-ref mem_ current_pos) 1))
                     (vector-set! mem_ current_pos (+ (vector-ref mem_ current_pos) 1))
                     (vector-set! mem_ current_pos (+ (vector-ref mem_ current_pos) 1))
                     (vector-set! mem_ current_pos (+ (vector-ref mem_ current_pos) 1))
                     (vector-set! mem_ current_pos (+ (vector-ref mem_ current_pos) 1))
                     (vector-set! mem_ current_pos (+ (vector-ref mem_ current_pos) 1))
                     (vector-set! mem_ current_pos (+ (vector-ref mem_ current_pos) 1))
                     (vector-set! mem_ current_pos (+ (vector-ref mem_ current_pos) 1))
                     (vector-set! mem_ current_pos (+ (vector-ref mem_ current_pos) 1))
                     (vector-set! mem_ current_pos (+ (vector-ref mem_ current_pos) 1))
                     (vector-set! mem_ current_pos (+ (vector-ref mem_ current_pos) 1))
                     (vector-set! mem_ current_pos (+ (vector-ref mem_ current_pos) 1))
                     (vector-set! mem_ current_pos (+ (vector-ref mem_ current_pos) 1))
                     (vector-set! mem_ current_pos (+ (vector-ref mem_ current_pos) 1))
                     (vector-set! mem_ current_pos (+ (vector-ref mem_ current_pos) 1))
                     (vector-set! mem_ current_pos (+ (vector-ref mem_ current_pos) 1))
                     (vector-set! mem_ current_pos (+ (vector-ref mem_ current_pos) 1))
                     (vector-set! mem_ current_pos (+ (vector-ref mem_ current_pos) 1))
                     (vector-set! mem_ current_pos (+ (vector-ref mem_ current_pos) 1))
                     (vector-set! mem_ current_pos (+ (vector-ref mem_ current_pos) 1))
                     (vector-set! mem_ current_pos (+ (vector-ref mem_ current_pos) 1))
                     (vector-set! mem_ current_pos (+ (vector-ref mem_ current_pos) 1))
                     (vector-set! mem_ current_pos (+ (vector-ref mem_ current_pos) 1))
                     (vector-set! mem_ current_pos (+ (vector-ref mem_ current_pos) 1))
                     (vector-set! mem_ current_pos (+ (vector-ref mem_ current_pos) 1))
                     (vector-set! mem_ current_pos (+ (vector-ref mem_ current_pos) 1))
                     (vector-set! mem_ current_pos (+ (vector-ref mem_ current_pos) 1))
                     (vector-set! mem_ current_pos (+ (vector-ref mem_ current_pos) 1))
                     (vector-set! mem_ current_pos (+ (vector-ref mem_ current_pos) 1))
                     (vector-set! mem_ current_pos (+ (vector-ref mem_ current_pos) 1))
                     (vector-set! mem_ current_pos (+ (vector-ref mem_ current_pos) 1))
                     (vector-set! mem_ current_pos (+ (vector-ref mem_ current_pos) 1))
                     (vector-set! mem_ current_pos (+ (vector-ref mem_ current_pos) 1))
                     (vector-set! mem_ current_pos (+ (vector-ref mem_ current_pos) 1))
                     (vector-set! mem_ current_pos (+ (vector-ref mem_ current_pos) 1))
                     (vector-set! mem_ current_pos (+ (vector-ref mem_ current_pos) 1))
                     (vector-set! mem_ current_pos (+ (vector-ref mem_ current_pos) 1))
                     (vector-set! mem_ current_pos (+ (vector-ref mem_ current_pos) 1))
                     (vector-set! mem_ current_pos (+ (vector-ref mem_ current_pos) 1))
                     (vector-set! mem_ current_pos (+ (vector-ref mem_ current_pos) 1))
                     (vector-set! mem_ current_pos (+ (vector-ref mem_ current_pos) 1))
                     (vector-set! mem_ current_pos (+ (vector-ref mem_ current_pos) 1))
                     (vector-set! mem_ current_pos (+ (vector-ref mem_ current_pos) 1))
                     (vector-set! mem_ current_pos (+ (vector-ref mem_ current_pos) 1))
                     (vector-set! mem_ current_pos (+ (vector-ref mem_ current_pos) 1))
                     (let ([current_pos (+ current_pos 1)])
                       (block
                         (vector-set! mem_ current_pos (+ (vector-ref mem_ current_pos) 1))
                         (vector-set! mem_ current_pos (+ (vector-ref mem_ current_pos) 1))
                         (vector-set! mem_ current_pos (+ (vector-ref mem_ current_pos) 1))
                         (vector-set! mem_ current_pos (+ (vector-ref mem_ current_pos) 1))
                         (vector-set! mem_ current_pos (+ (vector-ref mem_ current_pos) 1))
                         (vector-set! mem_ current_pos (+ (vector-ref mem_ current_pos) 1))
                         (vector-set! mem_ current_pos (+ (vector-ref mem_ current_pos) 1))
                         (vector-set! mem_ current_pos (+ (vector-ref mem_ current_pos) 1))
                         (vector-set! mem_ current_pos (+ (vector-ref mem_ current_pos) 1))
                         (vector-set! mem_ current_pos (+ (vector-ref mem_ current_pos) 1))
                         (letrec ([d (lambda (current_pos) 
                                       (if (not (eq? (vector-ref mem_ current_pos) 0))
                                         (block
                                           (vector-set! mem_ current_pos (- (vector-ref mem_ current_pos) 1))
                                           (let ([current_pos (- current_pos 1)])
                                             (block
                                               (vector-set! mem_ current_pos (+ (vector-ref mem_ current_pos) 1))
                                               (display (integer->char (vector-ref mem_ current_pos)))
                                               (let ([current_pos (+ current_pos 1)])
                                                 (d current_pos))
                                               ))
                                           )
                                         '()))])
                         (d current_pos))
                       ))
                   ))))))

